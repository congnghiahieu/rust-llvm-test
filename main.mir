// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}

fn longest(_1: &str, _2: &str) -> &str {
    debug x => _1;
    debug y => _2;
    let mut _0: &str;
    let mut _3: bool;
    let mut _4: usize;
    let mut _5: usize;

    bb0: {
        _4 = core::str::<impl str>::len(copy _1) -> [return: bb1, unwind continue];
    }

    bb1: {
        _5 = core::str::<impl str>::len(copy _2) -> [return: bb2, unwind continue];
    }

    bb2: {
        _3 = Gt(move _4, move _5);
        switchInt(move _3) -> [0: bb4, otherwise: bb3];
    }

    bb3: {
        _0 = copy _1;
        goto -> bb5;
    }

    bb4: {
        _0 = copy _2;
        goto -> bb5;
    }

    bb5: {
        return;
    }
}
